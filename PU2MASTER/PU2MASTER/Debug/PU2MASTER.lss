
PU2MASTER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000254  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000004  00800060  00000254  000002e8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800064  00800064  000002ec  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002ec  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000031c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000358  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000659  00000000  00000000  00000380  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000058f  00000000  00000000  000009d9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000275  00000000  00000000  00000f68  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000007c  00000000  00000000  000011e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000032d  00000000  00000000  0000125c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000cb  00000000  00000000  00001589  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  00001654  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__vector_8>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e5       	ldi	r30, 0x54	; 84
  68:	f2 e0       	ldi	r31, 0x02	; 2
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a4 36       	cpi	r26, 0x64	; 100
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a4 e6       	ldi	r26, 0x64	; 100
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	aa 36       	cpi	r26, 0x6A	; 106
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 d5 00 	call	0x1aa	; 0x1aa <main>
  8a:	0c 94 28 01 	jmp	0x250	; 0x250 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__vector_8>:
int i=0;
int j;
//int b=sizeof(unsigned int);
enum {nextbyte=0,startbit=1,databit=2,stopbit=3} state=0;
ISR(TIMER1_OVF_vect)							//nfqvth lkz gjlcxtnf dhtvtyb
{
  92:	1f 92       	push	r1
  94:	0f 92       	push	r0
  96:	0f b6       	in	r0, 0x3f	; 63
  98:	0f 92       	push	r0
  9a:	11 24       	eor	r1, r1
  9c:	2f 93       	push	r18
  9e:	3f 93       	push	r19
  a0:	4f 93       	push	r20
  a2:	5f 93       	push	r21
  a4:	6f 93       	push	r22
  a6:	7f 93       	push	r23
  a8:	8f 93       	push	r24
  aa:	9f 93       	push	r25
  ac:	af 93       	push	r26
  ae:	bf 93       	push	r27
  b0:	ef 93       	push	r30
  b2:	ff 93       	push	r31
	TCNT1=DELAYINT;
  b4:	8c ef       	ldi	r24, 0xFC	; 252
  b6:	9f ef       	ldi	r25, 0xFF	; 255
  b8:	9d bd       	out	0x2d, r25	; 45
  ba:	8c bd       	out	0x2c, r24	; 44
	if(i<1)
  bc:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <i>
  c0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <i+0x1>
  c4:	18 16       	cp	r1, r24
  c6:	19 06       	cpc	r1, r25
  c8:	0c f4       	brge	.+2      	; 0xcc <__vector_8+0x3a>
  ca:	5e c0       	rjmp	.+188    	; 0x188 <__vector_8+0xf6>
	{
		switch(state)
  cc:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__data_end>
  d0:	81 30       	cpi	r24, 0x01	; 1
  d2:	19 f1       	breq	.+70     	; 0x11a <__vector_8+0x88>
  d4:	30 f0       	brcs	.+12     	; 0xe2 <__vector_8+0x50>
  d6:	82 30       	cpi	r24, 0x02	; 2
  d8:	49 f1       	breq	.+82     	; 0x12c <__vector_8+0x9a>
  da:	83 30       	cpi	r24, 0x03	; 3
  dc:	09 f4       	brne	.+2      	; 0xe0 <__vector_8+0x4e>
  de:	47 c0       	rjmp	.+142    	; 0x16e <__vector_8+0xdc>
  e0:	53 c0       	rjmp	.+166    	; 0x188 <__vector_8+0xf6>
		{
			case nextbyte:
			current_byte = INFO % 10;
  e2:	60 91 60 00 	lds	r22, 0x0060	; 0x800060 <INFO>
  e6:	70 91 61 00 	lds	r23, 0x0061	; 0x800061 <INFO+0x1>
  ea:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <INFO+0x2>
  ee:	90 91 63 00 	lds	r25, 0x0063	; 0x800063 <INFO+0x3>
  f2:	2a e0       	ldi	r18, 0x0A	; 10
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	40 e0       	ldi	r20, 0x00	; 0
  f8:	50 e0       	ldi	r21, 0x00	; 0
  fa:	0e 94 e7 00 	call	0x1ce	; 0x1ce <__divmodsi4>
  fe:	60 93 69 00 	sts	0x0069, r22	; 0x800069 <current_byte>
			INFO = INFO / 10;
 102:	20 93 60 00 	sts	0x0060, r18	; 0x800060 <INFO>
 106:	30 93 61 00 	sts	0x0061, r19	; 0x800061 <INFO+0x1>
 10a:	40 93 62 00 	sts	0x0062, r20	; 0x800062 <INFO+0x2>
 10e:	50 93 63 00 	sts	0x0063, r21	; 0x800063 <INFO+0x3>
			state=startbit;
 112:	81 e0       	ldi	r24, 0x01	; 1
 114:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
			break;
 118:	37 c0       	rjmp	.+110    	; 0x188 <__vector_8+0xf6>
			case startbit:
			PORTD = 0b00000000;
 11a:	12 ba       	out	0x12, r1	; 18
			j = 0;
 11c:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <j+0x1>
 120:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <j>
			state=databit;
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
			break;
 12a:	2e c0       	rjmp	.+92     	; 0x188 <__vector_8+0xf6>
			case databit:
			if ((current_byte & (1<< j)))
 12c:	80 91 69 00 	lds	r24, 0x0069	; 0x800069 <current_byte>
 130:	90 e0       	ldi	r25, 0x00	; 0
 132:	00 90 67 00 	lds	r0, 0x0067	; 0x800067 <j>
 136:	02 c0       	rjmp	.+4      	; 0x13c <__vector_8+0xaa>
 138:	95 95       	asr	r25
 13a:	87 95       	ror	r24
 13c:	0a 94       	dec	r0
 13e:	e2 f7       	brpl	.-8      	; 0x138 <__vector_8+0xa6>
 140:	80 ff       	sbrs	r24, 0
 142:	03 c0       	rjmp	.+6      	; 0x14a <__vector_8+0xb8>
			{
				PORTD = 0b00000010;
 144:	82 e0       	ldi	r24, 0x02	; 2
 146:	82 bb       	out	0x12, r24	; 18
 148:	01 c0       	rjmp	.+2      	; 0x14c <__vector_8+0xba>
			}
			else
			{
				PORTD = 0b00000000;
 14a:	12 ba       	out	0x12, r1	; 18
			}
			if (j>7)
 14c:	80 91 67 00 	lds	r24, 0x0067	; 0x800067 <j>
 150:	90 91 68 00 	lds	r25, 0x0068	; 0x800068 <j+0x1>
 154:	88 30       	cpi	r24, 0x08	; 8
 156:	91 05       	cpc	r25, r1
 158:	24 f0       	brlt	.+8      	; 0x162 <__vector_8+0xd0>
			state=stopbit;
 15a:	83 e0       	ldi	r24, 0x03	; 3
 15c:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__data_end>
 160:	13 c0       	rjmp	.+38     	; 0x188 <__vector_8+0xf6>
			else
			j++;
 162:	01 96       	adiw	r24, 0x01	; 1
 164:	90 93 68 00 	sts	0x0068, r25	; 0x800068 <j+0x1>
 168:	80 93 67 00 	sts	0x0067, r24	; 0x800067 <j>
 16c:	0d c0       	rjmp	.+26     	; 0x188 <__vector_8+0xf6>
			break;
			case stopbit:
			PORTD = 0b00000010;
 16e:	82 e0       	ldi	r24, 0x02	; 2
 170:	82 bb       	out	0x12, r24	; 18
			i++;
 172:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <i>
 176:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <i+0x1>
 17a:	01 96       	adiw	r24, 0x01	; 1
 17c:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <i+0x1>
 180:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <i>
			state=nextbyte;
 184:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <__data_end>
			break;
		}
	}
}
 188:	ff 91       	pop	r31
 18a:	ef 91       	pop	r30
 18c:	bf 91       	pop	r27
 18e:	af 91       	pop	r26
 190:	9f 91       	pop	r25
 192:	8f 91       	pop	r24
 194:	7f 91       	pop	r23
 196:	6f 91       	pop	r22
 198:	5f 91       	pop	r21
 19a:	4f 91       	pop	r20
 19c:	3f 91       	pop	r19
 19e:	2f 91       	pop	r18
 1a0:	0f 90       	pop	r0
 1a2:	0f be       	out	0x3f, r0	; 63
 1a4:	0f 90       	pop	r0
 1a6:	1f 90       	pop	r1
 1a8:	18 95       	reti

000001aa <main>:



int main(void)
{
	DDRB = 0x00;
 1aa:	17 ba       	out	0x17, r1	; 23
	DDRD = 0xFF;
 1ac:	8f ef       	ldi	r24, 0xFF	; 255
 1ae:	81 bb       	out	0x11, r24	; 17

	PORTB = 0xFF;
 1b0:	88 bb       	out	0x18, r24	; 24
	PORTD = 0xFF;
 1b2:	82 bb       	out	0x12, r24	; 18


	TCCR1B|=(1<<CS12);					//?anoioa =ie/256
 1b4:	8e b5       	in	r24, 0x2e	; 46
 1b6:	84 60       	ori	r24, 0x04	; 4
 1b8:	8e bd       	out	0x2e, r24	; 46
	TIMSK|=(1<<TOIE1);					//?ac?aoaiea i?a?uaaiey ii ia?aiieiaie? oaeia?a/n?ao?eea1//I?e onoaiiaeaiiii aeoa OCIE1B e onoaiiaeaiiii aeoa I ?aaeno?a noaoona ?ac?aoaaony i?a?uaaiea ii ia?aiieiaie? oaeia?a/n?ao?eea1
 1ba:	89 b7       	in	r24, 0x39	; 57
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	89 bf       	out	0x39, r24	; 57
	TCNT1=DELAYINT;						//iaeneioi 16aeo=65 536//Niioaaonoaaiii, anee a CSxx Caienaii 100, oi oaaee?aiea cia?aiey a TCNT1 i?ienoiaeo ia ea?aue 256-ue oaeo i?ioanni?a.
 1c0:	8c ef       	ldi	r24, 0xFC	; 252
 1c2:	9f ef       	ldi	r25, 0xFF	; 255
 1c4:	9d bd       	out	0x2d, r25	; 45
 1c6:	8c bd       	out	0x2c, r24	; 44

	sei();
 1c8:	78 94       	sei

	//PORTD = 0x02;
	//PORTB = 0b00100000;//5
	while(1){
		if (!(PINB&0b00000100))
 1ca:	86 b3       	in	r24, 0x16	; 22
 1cc:	fe cf       	rjmp	.-4      	; 0x1ca <main+0x20>

000001ce <__divmodsi4>:
 1ce:	05 2e       	mov	r0, r21
 1d0:	97 fb       	bst	r25, 7
 1d2:	1e f4       	brtc	.+6      	; 0x1da <__divmodsi4+0xc>
 1d4:	00 94       	com	r0
 1d6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <__negsi2>
 1da:	57 fd       	sbrc	r21, 7
 1dc:	07 d0       	rcall	.+14     	; 0x1ec <__divmodsi4_neg2>
 1de:	0e 94 06 01 	call	0x20c	; 0x20c <__udivmodsi4>
 1e2:	07 fc       	sbrc	r0, 7
 1e4:	03 d0       	rcall	.+6      	; 0x1ec <__divmodsi4_neg2>
 1e6:	4e f4       	brtc	.+18     	; 0x1fa <__divmodsi4_exit>
 1e8:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__negsi2>

000001ec <__divmodsi4_neg2>:
 1ec:	50 95       	com	r21
 1ee:	40 95       	com	r20
 1f0:	30 95       	com	r19
 1f2:	21 95       	neg	r18
 1f4:	3f 4f       	sbci	r19, 0xFF	; 255
 1f6:	4f 4f       	sbci	r20, 0xFF	; 255
 1f8:	5f 4f       	sbci	r21, 0xFF	; 255

000001fa <__divmodsi4_exit>:
 1fa:	08 95       	ret

000001fc <__negsi2>:
 1fc:	90 95       	com	r25
 1fe:	80 95       	com	r24
 200:	70 95       	com	r23
 202:	61 95       	neg	r22
 204:	7f 4f       	sbci	r23, 0xFF	; 255
 206:	8f 4f       	sbci	r24, 0xFF	; 255
 208:	9f 4f       	sbci	r25, 0xFF	; 255
 20a:	08 95       	ret

0000020c <__udivmodsi4>:
 20c:	a1 e2       	ldi	r26, 0x21	; 33
 20e:	1a 2e       	mov	r1, r26
 210:	aa 1b       	sub	r26, r26
 212:	bb 1b       	sub	r27, r27
 214:	fd 01       	movw	r30, r26
 216:	0d c0       	rjmp	.+26     	; 0x232 <__udivmodsi4_ep>

00000218 <__udivmodsi4_loop>:
 218:	aa 1f       	adc	r26, r26
 21a:	bb 1f       	adc	r27, r27
 21c:	ee 1f       	adc	r30, r30
 21e:	ff 1f       	adc	r31, r31
 220:	a2 17       	cp	r26, r18
 222:	b3 07       	cpc	r27, r19
 224:	e4 07       	cpc	r30, r20
 226:	f5 07       	cpc	r31, r21
 228:	20 f0       	brcs	.+8      	; 0x232 <__udivmodsi4_ep>
 22a:	a2 1b       	sub	r26, r18
 22c:	b3 0b       	sbc	r27, r19
 22e:	e4 0b       	sbc	r30, r20
 230:	f5 0b       	sbc	r31, r21

00000232 <__udivmodsi4_ep>:
 232:	66 1f       	adc	r22, r22
 234:	77 1f       	adc	r23, r23
 236:	88 1f       	adc	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	1a 94       	dec	r1
 23c:	69 f7       	brne	.-38     	; 0x218 <__udivmodsi4_loop>
 23e:	60 95       	com	r22
 240:	70 95       	com	r23
 242:	80 95       	com	r24
 244:	90 95       	com	r25
 246:	9b 01       	movw	r18, r22
 248:	ac 01       	movw	r20, r24
 24a:	bd 01       	movw	r22, r26
 24c:	cf 01       	movw	r24, r30
 24e:	08 95       	ret

00000250 <_exit>:
 250:	f8 94       	cli

00000252 <__stop_program>:
 252:	ff cf       	rjmp	.-2      	; 0x252 <__stop_program>
